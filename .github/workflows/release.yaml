name: Build and Release Clip Binary

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goversion: ['1.20']
        os: ['ubuntu-latest', 'macos-latest', 'macos-latest-arm']
        include:
        - os: ubuntu-latest
          ARCH: amd64
          PLATFORM: linux
        - os: macos-latest
          ARCH: amd64
          PLATFORM: darwin
        - os: macos-latest-arm
          ARCH: arm64
          PLATFORM: darwin

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goversion }}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Get dependencies
      run: go mod download
    - name: Build
      env:
        GOOS: ${{ matrix.PLATFORM }}
        GOARCH: ${{ matrix.ARCH }}
      run: go build -o clip ./cmd/main.go
    - name: Create artifacts directory
      run: mkdir -p artifacts/${{ matrix.PLATFORM }}-${{ matrix.ARCH }}-clip
    - name: Move binary to artifacts directory
      run: mv clip artifacts/${{ matrix.PLATFORM }}-${{ matrix.ARCH }}-clip/clip
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.PLATFORM }}-${{ matrix.ARCH }}-clip
        path: artifacts/${{ matrix.PLATFORM }}-${{ matrix.ARCH }}-clip

  release:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: linux-amd64-clip
        path: artifacts/linux-amd64-clip

    - name: Upload Release Asset - Linux amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: linux-amd64-clip
        asset_path: artifacts/linux-amd64-clip/clip
        asset_content_type: application/octet-stream

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: darwin-amd64-clip
        path: artifacts/darwin-amd64-clip

    - name: Upload Release Asset - macOS amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: darwin-amd64-clip
        asset_path: artifacts/darwin-amd64-clip/clip
        asset_content_type: application/octet-stream

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: darwin-arm64-clip
        path: artifacts/darwin-arm64-clip

    - name: Upload Release Asset - macOS arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: darwin-arm64-clip
        asset_path: artifacts/darwin-arm64-clip/clip
        asset_content_type: application/octet-stream
